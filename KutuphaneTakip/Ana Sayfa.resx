<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAABJ1JREFUWEft
        V91PWmcYZ1uyv2TJLrpkN9uudlFSOPjR6exi77a7WhvuG6ugVCAKalH7tfnBh1rTuq6FLla6dmamYgG1
        dllWu1UQ8LMD/AIRKvrsfY4vBMIROdVlzcYv+YX3vM/z/J7fed5Dco7gf4Gx48c/cEokcmdRkctZWOjC
        Ne7R8L+DUaHwQyfDKMcLC73jRUWbroqK+EpdHSBxjXsYwxzMpWX/HEAgeMcuEn3uEIuvOwoK/BMnT27M
        VlbGV+vrYUun4yTGMAdzsQZrUQO1qOzhYWOYj8YlkkZydPOpk+IytK5Ws+SKsZM9e3YbNRxEy1lQ0IDa
        tA0/OITCj8mdNpBnaY4cU2jmzJlYNlNeqXTnaWnpuoNhNuxicQjXuJfNLGqiNvbAXtiTts8EKBTvJo7P
        zjBBPBL3uXPb+x0f7rsrK19PFBevOSSSJUK1Uyg8lqpFdK4SwwHMwdysWqQX9sTeyceA6LDmEE/E4nl2
        UhUV0QMmFZ9MTIphTE9EItFAefl7VCYDGMMczE2ZbDzrZIkH9IKeqAwxeOIEZwEKzUqlscmSkgC5szVy
        Z90HmdoPSbNEg5hdR03U3s8seqKl6Qbp8cWSx8cwqsTxHRWSj4FIlPoYxFIfgwyDHqk0ehST4guuyaKX
        NIMk4MO//VFPii9S/mDfkt9lur13F3SZxHlN12eylm6F+uqNsdo204pMZ4zs0bApbzUGLl7pG6nWGeqq
        mjs+pSUZwBjmYC7WYG1Cp7bVGFRd67fVXNLXntd0f0JLktj39Kqbuk/Xtpp86mv9IctDW3Ta5YMl/wqs
        hzYhshVlGVzbgOczXjA/HIspr/RFFO09czUtXeVUQoBr3GvR/7Blm/oj7l4MwlxgA3z+EMu99Tq4l4Jg
        m3qxfdlk3iRD8FRpu7+iEtwgorY2093wS88C7EJuwLw/PfOgM9wOX2zvtSF7zI8is8sr4PVv5MzZ5VXo
        tQxHSP0otZOJqqYu2N3N1Vo6sO7+iDM28dwd5zKQK9EDtZMJDB4WXE35kNNgac39L8rkD169LQbL5NZX
        p6qtxdSeQFAmswZkN71s8LDgasqH6KGGeCmTD/mpPYGgpHoQmobW3hqD6AU9UXt5g7yYN8jVlA/zBrma
        8mHeIFdTPswb5GrKh3mDXE358I0Nxnd22Nf9HfKbDVxNU7n32s8dQ+ZkMBp7Db9Ou+B76yg0680gb+2B
        6kuG5G9dey9oOm+z8WfTM2x+AolGvkAIXi744fHTF9Ax8BM0fjeQpqG+fhOM5mEYmZwG12KA5Odo0PLI
        DjKdCVSdg6Dsn4KGux5oGgyy8STJNe6rSFxJ8uRtvWxdOLLFTsj+2wxrQNX5I8mZhIY7s6AdDKRp4DXu
        K29MQn3HPWggN+D83Z3d4IUWPaiMv4Dm3nKa2EHEfCWpU1zuAw1ppDIMg8ayyJm7HzWWBVAafoYLzXr2
        Os3gl7KhFdmtOTIVb0YhHzaSqbIT54jlysY7HpDd8gG+5VN7e98kaBJdvym/0T4Oq81/AfJr7WiYKydX
        km+SYNo3yWFRrhh4v6z2gZZ8eK0iT8mtGtyj4f8yBIK/ASUtO4LN8CZ0AAAAAElFTkSuQmCC
</value>
  </data>
</root>