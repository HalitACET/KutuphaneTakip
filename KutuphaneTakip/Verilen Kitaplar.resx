<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>